{"version":3,"sources":["Login.js"],"names":["Utils","require","RoomInfo","cc","Class","extends","Component","properties","inputIP","default","type","EditBox","inputPort","inputName","inputRoom","btnEnter","Button","init","start","onEnterClick","ip","string","port","parseInt","name","room","log","pomelo","host","route","request","uid","data","code","_ip","_port","username","rid","printObj","myName","roomId","players","i","users","length","playerInfo","push","director","loadScene"],"mappings":"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","file":"Login.js","sourceRoot":"../../../../assets/Script","sourcesContent":["// Learn cc.Class:\r\n//  - [Chinese] http://www.cocos.com/docs/creator/scripting/class.html\r\n//  - [English] http://www.cocos2d-x.org/docs/editors_and_tools/creator-chapters/scripting/class/index.html\r\n// Learn Attribute:\r\n//  - [Chinese] http://www.cocos.com/docs/creator/scripting/reference/attributes.html\r\n//  - [English] http://www.cocos2d-x.org/docs/editors_and_tools/creator-chapters/scripting/reference/attributes/index.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] http://www.cocos.com/docs/creator/scripting/life-cycle-callbacks.html\r\n//  - [English] http://www.cocos2d-x.org/docs/editors_and_tools/creator-chapters/scripting/life-cycle-callbacks/index.html\r\n\r\nvar Utils = require('Utils')\r\nvar RoomInfo = require('RoomInfo')\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        inputIP: {\r\n            default: null,\r\n            type: cc.EditBox\r\n        },\r\n        inputPort: {\r\n            default: null,\r\n            type: cc.EditBox\r\n        },\r\n        inputName: {\r\n            default: null,\r\n            type: cc.EditBox\r\n        },\r\n        inputRoom: {\r\n            default:null,\r\n            type: cc.EditBox\r\n        },\r\n        btnEnter: {\r\n            default: null,\r\n            type: cc.Button,\r\n        },\r\n        // foo: {\r\n        //     // ATTRIBUTES:\r\n        //     default: null,        // The default value will be used only when the component attaching\r\n        //                           // to a node for the first time\r\n        //     type: cc.SpriteFrame, // optional, default is typeof default\r\n        //     serializable: true,   // optional, default is true\r\n        // },\r\n        // bar: {\r\n        //     get () {\r\n        //         return this._bar;\r\n        //     },\r\n        //     set (value) {\r\n        //         this._bar = value;\r\n        //     }\r\n        // },\r\n    },\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    // onLoad () {},\r\n    init () {\r\n\r\n    },\r\n\r\n    start () {\r\n        // cc.log(\"RoomInfo.targetName\", RoomInfo.targetName);\r\n        // cc.log(RoomInfo.targetName == '*');\r\n        // cc.log(RoomInfo.targetName == \"*\");\r\n    },\r\n\r\n    onEnterClick() {\r\n        var ip = this.inputIP.string;\r\n        var port = parseInt(this.inputPort.string);\r\n        var name = this.inputName.string;\r\n        var room = parseInt(this.inputRoom.string);\r\n        cc.log(ip, port);\r\n        cc.log(name, room);\r\n\r\n        // connect\r\n        pomelo.init({\r\n            host: ip,\r\n            port: port,\r\n            log: true\r\n        }, function() {\r\n            cc.log(\"connected!!!\", ip, port);\r\n            var route = 'gate.gateHandler.queryEntry';\r\n            cc.log(\"request to gateHandler\");\r\n            pomelo.request(route, {\r\n                uid: name,\r\n            }, function(data) {\r\n                if (data.code === 500) {\r\n                    cc.log(\"login fail : 500\");\r\n                    return;\r\n                }\r\n                var _ip = data.host;\r\n                var _port = data.port;\r\n                cc.log(\"get ip and port from gate : \", _ip, _port);\r\n                pomelo.init({\r\n                    host: _ip,\r\n                    port: _port,\r\n                    log: true,\r\n                }, function() {\r\n                    cc.log(\"connect to\", _ip, _port);\r\n                    var route = \"connector.entryHandler.enter\";\r\n                    pomelo.request(route, {\r\n                        username: name,\r\n                        rid: room,\r\n                    }, function(data) {\r\n                        cc.log(\"get data\");\r\n                        Utils.printObj(data);\r\n                        RoomInfo.myName = name;\r\n                        RoomInfo.roomId = room;\r\n                        RoomInfo.players = [];\r\n                        for (i = 0; i < data.users.length; i++) {\r\n                            var playerInfo = {};\r\n                            playerInfo.name = data.users[i];\r\n                            RoomInfo.players.push(playerInfo);\r\n                        }\r\n                        cc.director.loadScene(\"chat\");\r\n                    });\r\n                })\r\n            })\r\n        });\r\n    },\r\n\r\n    // update (dt) {},\r\n});\r\n"]}